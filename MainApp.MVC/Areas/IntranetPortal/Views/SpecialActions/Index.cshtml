@using DAL.Helpers;
@using DAL.Interfaces.Helpers
@using MainApp.MVC.Helpers;
@using SD.Helpers;
@inject IAppSettingsAccessor appSettingAccessor;
@{
    var resCacheMain = await appSettingAccessor.GetApplicationSettingValueByKey<string>("TranslationClearCacheMainApp");
    var resCachePublic = await appSettingAccessor.GetApplicationSettingValueByKey<string>("TranslationClearCachePublicPortal");
    var mainAppResetTranslationCacheUrl = resCacheMain.IsSuccess ? resCacheMain.Data : null;
    var publicPortalResetTranslationCacheUrl = resCachePublic.IsSuccess ? resCachePublic.Data : null;
    ViewData["Title"] = @DbResHtml.T("Special actions", "Resources");
}
<div class="content-header bg-gradient-white border-bottom mb-4">
    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-6">
                <h4 class="text-muted mb-0"> @ViewData["Title"]</h4>
                <small class="text-muted">@DbResHtml.T("Admin actions include triggering a pop-up message when pressing a button to confirm critical operations or provide important information.", "Resources")</small>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item">
                        <a asp-action="Index" asp-controller="Map" asp-area="IntranetPortal" class="text-success">@DbResHtml.T("Home", "Resources")</a>
                    </li>
                    <li class="breadcrumb-item active"> @DbResHtml.T(@ViewData["Title"]?.ToString() ?? "Special actions", "Resources")</li>
                </ol>
            </div>
        </div>
    </div>
</div>
<div class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-4 mt-4">
                @if (User.HasAuthClaim(SD.AuthClaims.SpecialActionsResetTranslationCache))
                {
                    <div class="info-box">
                        <span class="info-box-icon bg-gradient-olive"><i class="fas fa-language"></i></span>
                        <div class="info-box-content text-center">
                            <span class="info-box-text">@DbResHtml.T("Reset translation cache", "Resources")</span>
                            <span class="info-box-number">
                                <button class="mb-1 btn bg-gradient-olive" onclick="resetTranslationCache()" title=@DbResHtml.T("Reset translation cache", "Resources")>@DbResHtml.T("Reset", "Resources")</button>
                                <button class="mb-1 btn bg-gradient-info" data-toggle="tooltip" data-placement="top" title="This button resets the translation cache.">
                                <i class="fas fa-question-circle"></i>
                                </button>
                            </span>
                        </div>
                    </div>                
                }
            </div>
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        $('[data-toggle="tooltip"]').tooltip();
    });
</script>


@section Scripts{
    <script>
        function resetTranslationCache() {
            $.ajax({
                type: "POST",
                url: "@Url.Action("ResetTranslationCache", "SpecialActions", new { Area = "IntranetPortal" })",
                data: {},
                success: function (data) {
                    if (data.generalError != undefined) {
                        Swal.fire({
                            text: `${data.generalError}`,
                            confirmButtonText: '@DbResHtml.T("Ok", "Resources")',
                            icon: "error"
                        }).then((result) => {
                            if (result.isConfirmed) {
                                location.reload();
                            }
                        });
                    }
                    else{
                        Swal.fire({
                            text: `${data.stringBuilderSuccess} ${data.stringBuilderError}`,
                            icon: "info",
                            confirmButtonText: '@DbResHtml.T("Ok", "Resources")',
                            allowOutsideClick: false,
                        }).then((result) => {
                            if (result.isConfirmed) {
                                location.reload();
                            }
                        });
                        
                    }
                   

                },
                error: function (req, status, error) {
                    Swal.fire({
                        text: '@DbResHtml.T("Error occured", "Resources")',
                        icon: "error"
                    });
                }
            });
            
        }
    </script>
}