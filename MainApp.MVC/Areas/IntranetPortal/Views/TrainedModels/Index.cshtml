@using MainApp.MVC.Helpers
@using MainApp.MVC.ViewModels.IntranetPortal.Training
@using Microsoft.AspNetCore.Localization
@using SD.Helpers
@model IEnumerable<TrainedModelViewModel>


@{
    ViewData["Title"] = @DbResHtml.T("Trained models list", "Resources");
}

<div class="content-header bg-gradient-white border-bottom mb-4">
    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-6">
                <h4 class="text-muted mb-0"> @ViewData["Title"]</h4>
                <small class="text-muted">@DbResHtml.T("Add, Edit, Delete and view all trained models", "Resources")</small>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item">
                        <a asp-action="Index" asp-controller="Map" asp-area="IntranetPortal" class="text-success">@DbResHtml.T("Home", "Resources")</a>
                    </li>
                    <li class="breadcrumb-item active"> @DbResHtml.T(@ViewData["Title"]?.ToString() ?? "Trained models list", "Resources")</li>
                </ol>
            </div>
        </div>
    </div>
</div>
<div class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-body">
@*                          <button class="mb-1 btn bg-gradient-primary float-left" data-toggle="modal" data-target="#addTrainingRunModal">
                             <i class="fas fa-plus"></i>
                             @DbResHtml.T("Add Training run", "Resources")
                         </button> *@
                        <div class="mt-5">
                            <table id="trainedModelsTable" class="table table-sm table-bordered table-striped custom-responsive-table">
                                <thead>
                                    <tr>
                                        <th>
                                            @DbResHtml.T("Name", "Resources")
                                        </th> 
                                        <th>
                                            @DbResHtml.T("Is Published", "Resources")
                                        </th>
                                        <th>
                                            @DbResHtml.T("CreatedBy", "Resources")
                                        </th>
                                        <th>
                                            @DbResHtml.T("CreatedOn", "Resources")
                                        </th>
                                        <th class="notexport">
                                            @DbResHtml.T("Action", "Resources")
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model)
                                    {
                                        <tr>
                                            <td>@item.Name</td>
                                            <td>@item.IsPublished</td>
                                            <td>@item.CreatedBy?.UserName</td>
                                            <td>@item.CreatedOn?.ToString("dd.MM.yyyy")</td>
                                            <td>

                                                <button class="mb-1 btn bg-gradient-warning text-white btn-xs" id="@item.Id" onclick="editTrainedModelModalFunction('@item.Id')" title=@DbResHtml.T("Edit", "Resources")>
                                                    <i class="fas fa-edit"></i>
                                                </button>
                                                <button class="ml-1 mb-1 btn bg-gradient-danger btn-xs" onclick="deleteTrainedModelModalFunction('@item.Id')" title="@DbResHtml.T("Delete trained model", "Resources")">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        @{
            var httpContext = ViewContext.HttpContext;
            var currentCulture = httpContext.Features.Get<IRequestCultureFeature>().RequestCulture.UICulture.TwoLetterISOLanguageName;
            var langPath = Url.Content("~/i18n/datatable/" + @currentCulture + ".json");
        }
            $(document).ready(function () {
                $('#trainedModelsTable').DataTable({
                    paging: true,
                    pageLength: 100,
                    "columnDefs": [
                        { "width": "20%", "targets": 2 }
                    ],
                    "language": {
                        "url": "@langPath"
                    },
                    responsive: true,
                    dom: '<"top"fB>rt<"bottom"lp>',
                    "buttons": [
                        {
                            extend: 'excelHtml5',
                            text: '<i class="fas fa-file-alt"></i>',
                            titleAttr: 'Export to Excel',
                            className: 'btn btn-success'
                        }
                    ]
                });

                $("#exportToExcelButton").click(function () {
                    $(".export-to-excel-button").click();
                });
            });


                    //EDIT
                function editTrainedModelConfirmed() {
                    var id = $("#textEditId").val();
                    var name = $("#txtEditName").val();
                    var isPublished= $("#txtEditIsPublished").val();
                    var createdById = $("#textEditCreatedById").val();
                    var createdOn = $("#textEditCreatedOn").val();

                    if (name == '' || isPublished == ''){
                        Swal.fire({
                            icon: "warning",
                            text: "@DbResHtml.T("Name and IsPublished is required property", "Resources")"
                        });
                        return;
                    }

                    var trainedModelViewModel = {
                        Id: id,
                        Name: name,
                        IsPublished: isPublished,
                        CreatedById: createdById,
                        CreatedOn: createdOn,

                    }

                    $.ajax({
                        type: "POST",
                                url: "@Url.Action("EditTrainedModelById", "TrainedModels", new { Area = "IntranetPortal" })",
                        data: {
                            trainedModelViewModel: trainedModelViewModel
                        },
                        success: function (data) {
                            if (data != undefined || data != null) {
                                if (data.isSuccess == false && data.errMsg != null) {
                                    Swal.fire({
                                        text: `${data.errMsg}`,
                                        confirmButtonText: '@DbResHtml.T("Ok", "Resources")',
                                        allowOutsideClick: false,
                                        icon: "error"
                                    });
                                }
                                else {
                                    Swal.fire({
                                        text: '@DbResHtml.T("Successfully edited trained model", "Resources")',
                                        confirmButtonText: '@DbResHtml.T("Ok", "Resources")',
                                        allowOutsideClick: false,
                                        icon: "success"
                                    }).then((result) => {
                                        if (result.isConfirmed) {
                                            location.reload();
                                        }
                                    });
                                }
                            }
                            else {
                                Swal.fire({
                                    text: `@DbResHtml.T("No data received", "Resources")`,
                                    confirmButtonText: '@DbResHtml.T("Ok", "Resources")',
                                    allowOutsideClick: false,
                                    icon: "error"
                                });
                            }
                        },
                        error: function (req, status, error) {
                            Swal.fire({
                                text: '@DbResHtml.T("Error occured", "Resources")',
                                icon: "error"
                            });
                        }
                    });
                }
                function editTrainedModelModalFunction(trainedModelId) {
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("GetTrainedModelById", "TrainedModels", new { Area = "IntranetPortal" })",
                        data: {
                           trainedModelId: trainedModelId
                        },
                        success: function (data) {
                            if (data != undefined || data != null) {
                                if (data.isSuccess == false && data.errMsg != null) {
                                    Swal.fire({
                                        text: `${data.errMsg}`,
                                        confirmButtonText: '@DbResHtml.T("Ok", "Resources")',
                                        allowOutsideClick: false,
                                        icon: "error"
                                    });
                                }
                                else {
                                    $("#editTrainedModelModalBody").html("");

                                    $("#editTrainedModelModalBody").append(
                                        '<div>'
                                        + `<input type="text" hidden id="textEditId">`
                                        + `<label class="form-control-label" for="txtEditName">@DbResHtml.T("Name:", "Resources")</label><input class="form-control" type="text" id="txtEditName" />`
                                        + `<label class="form-control-label mt-3" for="txtEditIsPublished">@DbResHtml.T("IsPublished:", "Resources")</label>`
                                        + `<select class="form-control" id="txtEditIsPublished">`
                                        + `<option value="true">@DbResHtml.T("True", "Resources")</option>`
                                        + `<option value="false">@DbResHtml.T("False", "Resources")</option>`
                                        + `</select>`
                                        + `<input type="text" hidden id="textEditCreatedById">`
                                        + `<input type="text" hidden id="textEditCreatedOn">`
                                        + '</div>'
                                    );
                                    $("#textEditId").val(data.data.id);
                                    $("#txtEditName").val(data.data.name);
                                    $("#txtEditIsPublished").val(data.data.isPublished.toString());
                                    $("#textEditCreatedById").val(data.data.createdById);
                                    $("#textEditCreatedOn").val(data.data.createdOn);

                                            $('#editTrainedModelModal').modal('show');
                                }
                            }
                            else {
                                Swal.fire({
                                    text: `@DbResHtml.T("No data received", "Resources")`,
                                    confirmButtonText: '@DbResHtml.T("Ok", "Resources")',
                                    allowOutsideClick: false,
                                    icon: "error"
                                });
                            }
                        },
                        error: function (req, status, error) {
                            Swal.fire({
                                text: '@DbResHtml.T("Error occured", "Resources")',
                                icon: "error"
                            });
                        }
                    });
                }


                function deleteTrainedModelConfirmed() {
                            var trainedModelId = $("#txtDeleteId").val();

                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("DeleteTrainedModelById", "TrainedModels", new { Area = "IntranetPortal" })",
                        data: {
                            trainedModelId: trainedModelId
                        },
                        success: function (data) {
                            if (data != undefined || data != null) {
                                if (data.isSuccess == false && data.errMsg != null) {
                                    Swal.fire({
                                        text: `${data.errMsg}`,
                                        confirmButtonText: '@DbResHtml.T("Ok", "Resources")',
                                        allowOutsideClick: false,
                                        icon: "error"
                                    });
                                }
                                else {
                                    Swal.fire({
                                        text: '@DbResHtml.T("Successfully deleted trained model", "Resources")',
                                        confirmButtonText: '@DbResHtml.T("Ok", "Resources")',
                                        allowOutsideClick: false,
                                        icon: "success"
                                    }).then((result) => {
                                        if (result.isConfirmed) {
                                            location.reload();
                                        }
                                    });
                                }
                            }
                            else {
                                Swal.fire({
                                    text: `@DbResHtml.T("No data received", "Resources")`,
                                    confirmButtonText: '@DbResHtml.T("Ok", "Resources")',
                                    allowOutsideClick: false,
                                    icon: "error"
                                });
                            }
                        },
                        error: function (req, status, error) {
                            Swal.fire({
                                text: '@DbResHtml.T("Error occured", "Resources")',
                                icon: "error"
                            });
                        }
                    });
                }
                        function deleteTrainedModelModalFunction(trainedModelId) {
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("GetTrainedModelById", "TrainedModels", new { Area = "IntranetPortal" })",
                        data: {
                             trainedModelId: trainedModelId
                        },
                        success: function (data) {
                            if (data != undefined || data != null) {
                                if (data.isSuccess == false && data.errMsg != null) {
                                    Swal.fire({
                                        text: `${data.errMsg}`,
                                        confirmButtonText: '@DbResHtml.T("Ok", "Resources")',
                                        allowOutsideClick: false,
                                        icon: "error"
                                    });
                                }
                                else {
                                    $("#deleteTrainedModelModalBody").html("");

                                            $("#deleteTrainedModelModalBody").append(
                                        '<div>'
                                        + '<input type="text" id="txtDeleteId" hidden/>'
                                        + '<input type="text" id="txtDeleteName" hidden/>'
                                        + '<input type="text" id="txtDeleteIsPublished" hidden/>'

                                        + '<table class="table table-striped my-4 w-100">'
                                        + '<thead>'
                                        + '<tr>'
                                        + '<th>@DbResHtml.T("Name", "Resources")</th>'
                                        + '<th>@DbResHtml.T("Is Published", "Resources")</th>'
                                        + '</tr>'
                                        + '</thead>'
                                        + '<tbody>'
                                        + '<tr>'
                                        + `<td>${data.data.name}</td>`
                                        + `<td>${data.data.isPublished}</td>`
                                        + '</tr>'
                                        + '</tbody>'
                                        + '</table>'
                                        + '</div>'
                                    );

                                    $(`#txtDeleteId`).val(data.data.id);
                                    $(`#txtDeleteName`).val(data.data.name);
                                    $(`#txtDeleteIsPublished`).val(data.data.isPublished);

                                            $('#deleteTrainedModelModal').modal('show');
                                }
                            }
                            else {
                                Swal.fire({
                                    text: `@DbResHtml.T("No data received", "Resources")`,
                                    confirmButtonText: '@DbResHtml.T("Ok", "Resources")',
                                    allowOutsideClick: false,
                                    icon: "error"
                                });
                            }
                        },
                        error: function (req, status, error) {
                             Swal.fire({
                                        text: '@DbResHtml.T("Error occured", "Resources")',
                                        icon: "error"
                                    });
                        }
                    });
                }
    </script>
}



@section Bodyarea
{
    <div class="modal" id="deleteTrainedModelModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header bg-gradient-danger">
                    <h5 class="modal-title">@DbResHtml.T("Are you sure you want to delete this Trained Model?", "Resources")</h5>
                    <button type="button" class="close text-white" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div id="deleteTrainedModelModalBody" class="modal-body">
                </div>
                <div class="modal-footer">
                    <button type="button" class="mb-1 btn bg-gradient-danger" onclick="deleteTrainedModelConfirmed()" data-dismiss="modal" aria-label="Delete">
                        <span aria-hidden="true"> @DbResHtml.T("Delete", "Resources")</span>
                    </button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal" id="editTrainedModelModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header bg-gradient-warning text-white">
                    <h5 class="modal-title">@DbResHtml.T("Edit Trained Model", "Resources")</h5>
                    <button type="button" class="close text-white" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div id="editTrainedModelModalBody" class="modal-body">
                </div>
                <div class="modal-footer">
                    <button type="button" class="mb-1 btn bg-gradient-warning text-white" onclick="editTrainedModelConfirmed()" data-dismiss="modal" aria-label="Edit">
                        <span aria-hidden="true"> @DbResHtml.T("Edit", "Resources")</span>
                    </button>
                </div>
            </div>
        </div>
    </div>

}