@using MainApp.Helpers;
@using Microsoft.AspNetCore.Localization;
@using SD.Helpers;
@model Models.ViewModels.UserManagementEditRoleViewModel


@{
    ViewData["Title"] = @DbResHtml.T("Edit role", "Resources");
}
<div class="content-header bg-gradient-white border-bottom mb-4">
    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-6">
                <h4 class="text-muted mb-0"> @ViewData["Title"]</h4>
                <small class="text-muted">@DbResHtml.T("Edit role, role claims and additional data", "Resources")</small>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#" class="text-success">@DbResHtml.T("Home", "Resources")</a></li>
                    <li class="breadcrumb-item active">@ViewData["Title"]</li>
                </ol>
            </div>
        </div>
    </div>
</div>
<div class="content">
    <div class="container-fluid">
        <form asp-area="IntranetPortal" asp-controller="UserManagement" asp-action="EditRole" method="post" enctype="multipart/form-data">
            <div class="row">
                <div class="col-md-4">
                    <div class="card">
                        <div class="card-header bg-dark text-white">
                            <h3 class="card-title">Form for edit role</h3>
                        </div>
                        <div class="card-body">
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            <div class="form-group">
                                <label asp-for="Name" class="form-label">@DbResHtml.T("Name", "Resources")</label>
                                <input asp-for="Name" type="text" class="form-control" required>
                                <span asp-validation-for="Name" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <input @( !User.HasAuthClaim(SD.AuthClaims.UserManagementEditUsersAndRoles) ? "disabled='disabled'" : "") type="submit" onclick="formSubmit(event)" value="@DbResHtml.T("Save", "Resources")" class="mb-1 btn bg-gradient-success border-0" />
                                <a asp-area="IntranetPortal" asp-controller="UserManagement" asp-action="Index" class="mb-1 btn bg-gradient-secondary border-0">@DbResHtml.T("Back To List", "Resources")</a>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-8">
                    <div class="card">
                        <div class="card-header bg-dark text-white">
                            <h3 class="card-title">@DbResHtml.T("Edit role privileges", "Resources")</h3>
                        </div>
                        <div class="card-body">
                            <div class="table-responsive">
                                <table class="table table-striped my-4 w-100" id="roleClaimsTable">
                                    <thead>
                                        <tr>
                                            <th>
                                                @DbResHtml.T("Privilege name", "Resources")
                                            </th>
                                            <th>
                                                @DbResHtml.T("Privilege description", "Resources")
                                            </th>
                                            <th data-check-all="data-check-all">
                                                <div class="icheck-success mb-0">
                                                    <input id="checkAll" data-title="Check All" type="checkbox" data-toggle="tooltip">
                                                    <label for="checkAll">@DbResHtml.T("Check all claims", "Resources")</label>
                                                </div>
                                            </th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (SD.AuthClaim item in Model.Claims)
                                        {
                                            @Html.HiddenFor(z => z.Id)
                                            <tr>
                                                <td>
                                                    @item.Value
                                                </td>
                                                <td>
                                                    @item.Description
                                                </td>
                                                <td>
                                                    <div class="form-group clearfix">
                                                        <div class="icheck-success">
                                                            <input id="claims-@item.Value" class="roleClaims" name="ClaimsInsert" value="@item.Value" type="checkbox">
                                                            <label for="claims-@item.Value"></label>
                                                        </div>
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>




@section Scripts {
    <script>
        @{
            var httpContext = ViewContext.HttpContext;
            var currentCulture = httpContext.Features.Get<IRequestCultureFeature>().RequestCulture.UICulture.TwoLetterISOLanguageName;
            var langPath = Url.Content("~/i18n/datatable/" + @currentCulture + ".json");
        }
        var initialClaims = [];
        @foreach (var c in Model.ClaimsInsert)
        {
            @:initialClaims.push("@c");
        }
            (function () {
                $(initTableCheckAll);

                function initTableCheckAll() {
                    $('[data-check-all]').on('change', function () {
                        var $this = $(this),
                            index = $this.index() + 1,
                            checkbox = $this.find('input[type="checkbox"]'),
                            table = $this.parents('table'); // Make sure to affect only the correct checkbox column

                        table.find('tbody > tr > td:nth-child(' + index + ') input[type="checkbox"]').prop('checked', checkbox[0].checked);
                    });
                }
            })();

        $(document).ready(function () {
            $('#roleClaimsTable').DataTable({
                paging: true,
                pageLength: 100,
                "language": {
                        "url": "@langPath"
                }
            });

            $('.roleClaims').each(function () {
                var checkBox = $(this);
                if (initialClaims.includes(checkBox.val())) {
                    checkBox.prop("checked", true);
                }
            });
        });
        function formSubmit(event) {
            $("#roleClaimsTable").DataTable().destroy();
            return true;
        }
    </script>
}